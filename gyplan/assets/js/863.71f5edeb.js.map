{"version":3,"file":"assets/js/863.71f5edeb.js","mappings":"wJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,eAAe,CAACA,EAAG,YAAY,CAACA,EAAG,UAAU,CAACE,YAAY,eAAeC,MAAM,CAAC,iBAAiBL,EAAIM,YAAY,KAAO,aAAa,OAAS,KAAKN,EAAIO,GAAIP,EAAIQ,mBAAmB,SAASC,EAAKC,GAAO,OAAOR,EAAG,eAAe,CAACS,IAAID,EAAML,MAAM,CAAC,MAAQI,EAAKG,aAAa,CAACZ,EAAIa,GAAGb,EAAIc,GAAGL,EAAKM,YAAW,IAAI,GAAGb,EAAG,UAAU,CAACA,EAAG,gBAAgB,GAAGA,EAAG,cAAc,IAAI,IAEvbc,EAAkB,G,UCoBtB,GACAC,OACA,OACAX,YAAAA,oBACAE,kBAAAA,GACAS,KAAAA,CAAAA,CACAC,MAAAA,OACAC,SAAAA,CAAAA,CACAD,MAAAA,SACAC,SAAAA,CAAAA,CACAD,MAAAA,gBAGA,CACAA,MAAAA,OACAC,SAAAA,CAAAA,CACAD,MAAAA,SACAC,SAAAA,CAAAA,CACAD,MAAAA,cAEA,CACAA,MAAAA,SACAC,SAAAA,CAAAA,CACAD,MAAAA,gBAGA,CACAA,MAAAA,OACAC,SAAAA,CAAAA,CACAD,MAAAA,SACAC,SAAAA,CAAAA,CACAD,MAAAA,cAEA,CACAA,MAAAA,SACAC,SAAAA,CAAAA,CACAD,MAAAA,iBAIAE,aAAAA,CACAD,SAAAA,WACAD,MAAAA,WAIAG,UACA,yBAEAC,QAAAA,CAEAC,gBAAAA,GACAC,QAAAA,IAAAA,IAGA,yBACA,sBACA,iCC/EyQ,I,UCQrQC,GAAY,OACd,EACA1B,EACAiB,GACA,EACA,KACA,WACA,MAIF,EAAeS,EAAiB,S,oKCjBzB,SAASC,IACd,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,kCACLC,OAAQ,QAIL,SAASC,IACd,OAAOH,EAAAA,EAAAA,GAAQ,CACbC,IAAK,sCACLC,OAAQ,QAIL,SAASE,IACd,OAAOJ,EAAAA,EAAAA,GAAQ,CACbC,IAAK,6CACLC,OAAQ,QAIL,SAASG,EAAwBC,GACtC,OAAON,EAAAA,EAAAA,GAAQ,CACbC,IAAK,yCACLC,OAAQ,OACRI,WAIG,SAASC,EAAiBD,GAC/B,OAAON,EAAAA,EAAAA,GAAQ,CACbC,IAAK,kCACLC,OAAQ,OACRI","sources":["webpack://gyplan/./src/views/GyKnowledge/GyKnowledgeIndex.vue","webpack://gyplan/src/views/GyKnowledge/GyKnowledgeIndex.vue","webpack://gyplan/./src/views/GyKnowledge/GyKnowledgeIndex.vue?7e4a","webpack://gyplan/./src/views/GyKnowledge/GyKnowledgeIndex.vue?9b84","webpack://gyplan/./src/api/GyKnowledge.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-container',[_c('el-header',[_c('el-menu',{staticClass:\"el-menu-demo\",attrs:{\"default-active\":_vm.activeIndex,\"mode\":\"horizontal\",\"router\":\"\"}},_vm._l((_vm.knowledgeListData),function(item,index){return _c('el-menu-item',{key:index,attrs:{\"index\":item.routerName}},[_vm._v(_vm._s(item.name))])}),1)],1),_c('el-main',[_c('router-view')],1),_c('el-footer')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-container>\r\n      <el-header>\r\n        <el-menu :default-active=\"activeIndex\" class=\"el-menu-demo\" mode=\"horizontal\" router>\r\n          <el-menu-item v-for=\"(item, index) in knowledgeListData\" :key=\"index\" :index=\"item.routerName\">{{item.name}}</el-menu-item>\r\n        </el-menu>\r\n      </el-header>\r\n      <!-- <el-aside width=\"200px\">\r\n        <el-tree :data=\"data\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"></el-tree>\r\n      </el-aside> -->\r\n      <el-main>\r\n        <router-view></router-view>\r\n      </el-main>\r\n      <el-footer></el-footer>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getKnowledgeList } from '../../api/GyKnowledge'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      activeIndex: '/GyKnowledgeIndex',//顶部选中导航菜单栏\r\n      knowledgeListData: [],//知识分组列表\r\n      data: [{\r\n        label: '一级 1',\r\n        children: [{\r\n          label: '二级 1-1',\r\n          children: [{\r\n            label: '三级 1-1-1'\r\n          }]\r\n        }]\r\n      }, {\r\n        label: '一级 2',\r\n        children: [{\r\n          label: '二级 2-1',\r\n          children: [{\r\n            label: '三级 2-1-1'\r\n          }]\r\n        }, {\r\n          label: '二级 2-2',\r\n          children: [{\r\n            label: '三级 2-2-1'\r\n          }]\r\n        }]\r\n      }, {\r\n        label: '一级 3',\r\n        children: [{\r\n          label: '二级 3-1',\r\n          children: [{\r\n            label: '三级 3-1-1'\r\n          }]\r\n        }, {\r\n          label: '二级 3-2',\r\n          children: [{\r\n            label: '三级 3-2-1'\r\n          }]\r\n        }]\r\n      }],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'label'\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getKnowledgeList()\r\n  },\r\n  methods: {\r\n    // 树形控件点击事件\r\n    handleNodeClick(data) {\r\n      console.log(data);\r\n    },\r\n    // 获取知识分组列表\r\n    async getKnowledgeList() {\r\n      let data = await getKnowledgeList()\r\n      this.knowledgeListData = data.data\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n// .el-main {\r\n//   background-color: #111;\r\n// }\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GyKnowledgeIndex.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GyKnowledgeIndex.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GyKnowledgeIndex.vue?vue&type=template&id=6ba69f14&scoped=true&\"\nimport script from \"./GyKnowledgeIndex.vue?vue&type=script&lang=js&\"\nexport * from \"./GyKnowledgeIndex.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GyKnowledgeIndex.vue?vue&type=style&index=0&id=6ba69f14&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6ba69f14\",\n  null\n  \n)\n\nexport default component.exports","import request from \"../utils/request\";\r\n// 获取知识列表\r\nexport function getKnowledgeList() {\r\n  return request({\r\n    url: \"/api/knowledge/getKnowledgeList\",\r\n    method: \"get\",\r\n  });\r\n}\r\n// 获取数据结构/算法列表\r\nexport function getDataStructureList() {\r\n  return request({\r\n    url: \"/api/knowledge/getDataStructureList\",\r\n    method: \"get\",\r\n  });\r\n}\r\n// 获取数据结构/算法知识点分类列表\r\nexport function getDataStructureKeyTypeList() {\r\n  return request({\r\n    url: \"/api/knowledge/getDataStructureKeyTypeList\",\r\n    method: \"get\",\r\n  });\r\n}\r\n// 新增数据结构/算法知识点分类\r\nexport function addDataStructureKeyType(params) {\r\n  return request({\r\n    url: \"/api/knowledge/addDataStructureKeyType\",\r\n    method: \"post\",\r\n    params\r\n  });\r\n}\r\n// 新增数据结构/算法的题目/知识点\r\nexport function addDataStructure(params) {\r\n  return request({\r\n    url: \"/api/knowledge/addDataStructure\",\r\n    method: \"post\",\r\n    params\r\n  });\r\n}"],"names":["render","_vm","this","_c","_self","staticClass","attrs","activeIndex","_l","knowledgeListData","item","index","key","routerName","_v","_s","name","staticRenderFns","data","label","children","defaultProps","created","methods","handleNodeClick","console","component","getKnowledgeList","request","url","method","getDataStructureList","getDataStructureKeyTypeList","addDataStructureKeyType","params","addDataStructure"],"sourceRoot":""}